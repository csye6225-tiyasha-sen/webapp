name: packer-actions
on:
  pull_request:
    types:
      - closed

jobs:
  packer-build:
    runs-on: ubuntu-latest

    if: ${{github.event.pull_request.merged==true}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy to repository after zip
        run: cd .. && zip -r webapp.zip webapp && cp webapp.zip webapp/scripts/webapp.zip && cd webapp

      - name: Authenticate with GCP
        id: "auth"
        uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      - name: Setup `packer`
        uses: hashicorp/setup-packer@main
        id: setup
        with:
          version: "1.10.1"

      - name: Run `packer init`
        id: init
        run: packer init ./gcp.pkr.hcl

      - name: Packer build
        run: packer build -var "image_name=${{ secrets.CUSTOM_IMAGE_NAME }}" -var "project_id=${{ secrets.PROJECT_ID }}" ./gcp.pkr.hcl

      - name: Create instance template
        run: |
          gcloud compute instance-templates create ${{ secrets.INSTANCE_TEMPLATE }} \
          --source-instance="${{ secrets.SOURCE_INSTANCE }}" \
          --source-instance-zone="${{ secrets.SOURCE_INSTANCE_ZONE }}" \
          --instance-template-region="${{ secrets.INSTANCE_TEMPLATE_REGION }}" \
          --boot-disk-size=${{ secrets.BOOT_DISK_SIZE }} \
          --configure-disk=device-name="${{ secrets.DEVICE_NAME }}",instantiate-from=custom-image,custom-image="projects/${{ secrets.PROJECT_ID }}/global/images/${{ secrets.CUSTOM_IMAGE_NAME }}"

      - name: Configuration of managed instance group
        run: |
          gcloud compute instance-groups managed set-instance-template ${{ secrets.MANAGED_INSTANCE_GROUP_NAME }} \
          --template="projects/${{ secrets.PROJECT_ID }}/regions/${{ secrets.INSTANCE_TEMPLATE_REGION }}/instanceTemplates/${{ secrets.INSTANCE_TEMPLATE }}" \
          --region="${{ secrets.INSTANCE_TEMPLATE_REGION }}"

      - name: Starting of a basic rolling update
        run: |
          gcloud compute instance-groups managed rolling-action start-update ${{ secrets.MANAGED_INSTANCE_GROUP_NAME }} \
          --version template="projects/${{ secrets.PROJECT_ID }}/regions/${{ secrets.INSTANCE_TEMPLATE_REGION }}/instanceTemplates/${{ secrets.INSTANCE_TEMPLATE }}" \
          --region="${{ secrets.INSTANCE_TEMPLATE_REGION }}"

      - name: To check status of GitHub Actions workflow matches the status of instance
        run: |
          gcloud compute instance-groups managed wait-until ${{ secrets.MANAGED_INSTANCE_GROUP_NAME }} \
          --version-target-reached \
          --region="${{ secrets.INSTANCE_TEMPLATE_REGION }}"
